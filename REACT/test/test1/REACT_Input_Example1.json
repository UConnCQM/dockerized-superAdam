{
  "task": {
      "method": {
          "arguments": [
              { "name": "HammingPolyWeight", "value": 0.5 },
              { "name": "ComplexityWeight", "value": 0.2 },
              { "name": "RevEngWeight", "value": 0.2 },
              { "name": "BioProbWeight", "value": 0.1 },
              { "name": "HammingModelWeight", "value": 0.35 },
              { "name": "PolyScoreWeight", "value": 0.65 },
              { "name": "GenePoolSize", "value": 100 },
              { "name": "NumCandidates", "value": 55 },
              { "name": "NumParentsToPreserve", "value": 5 },
              { "name": "MaxGenerations", "value": 100 },
              { "name": "StableGenerationLimit", "value": 50 },
              { "name": "MutateProbability", "value": 0.5 },
              {
                "name": "priorBiologicalNetwork",
                "value": [
                    [1,0.5,0.3,0],
                    [0,1,0.5,1],
                    [1,0,0,1],
                    [1,0,0.7,1]
                  ]
              }
            ],
          "description": "this is the reverse engineering method that uses an evolutionary algorithm as optimization method",
          "id": "REACT",
          "type": "reverseEngineering"
        },
      "input": [
          {
            "description": "Polynomial model generated by a previously applied reverse-engineering method",
            "fieldCardinality": 2,
            "name": "priorReverseEngineeringNetwork",
            "type": "model",
            "variableScores": [
                {
                  "sources": [
                      { "score": 0.5, "source": "x1" },
                      { "score": 1, "source": "x2" },
                      { "score": 1, "source": "x3" },
                      { "score": 1, "source": "x4" }
                    ],
                  "target": "x1"
                },
                {
                  "sources": [
                      { "score": 1, "source": "x2" },
                      { "score": 1, "source": "x4" }
                    ],
                  "target": "x2"
                },
                {
                  "sources": [
                      { "score": 0.5, "source": "x1" },
                      { "score": 0.5, "source": "x2" }
                    ],
                  "target": "x3"
                },
                {
                  "sources": [
                      { "score": 0.33, "source": "x2" },
                      { "score": 0.66, "source": "x3" }
                    ],
                  "target": "x4"
                }
              ]
          },
          {
            "description": "Polynomial model generated by a previously applied reverse-engineering method",
            "fieldCardinality": 2,
            "name": "priorModel",
            "type": "model",
            "updateRules": [
                {
                  "functions": [
                      {
                        "inputVariables": ["x1","x2"],
                        "polynomialFunction": "x1*x2"
                      }
                    ],
                  "target": "x1"
                },
                {
                  "functions": [
                      {
                        "inputVariables": ["x1"],
                        "polynomialFunction": "x1+1"
                      },
                      {
                        "inputVariables": ["x1","x2"],
                        "polynomialFunction": "x1*x2"
                      }
                    ],
                  "target": "x2"
                },
                {
                  "functions": [
                      {
                        "inputVariables": ["x1","x2","x3"],
                        "polynomialFunction": "x3^2+x1"
                      }
                    ],
                  "target": "x3"
                },
                {
                  "functions": [
                      {
                        "inputVariables": ["x1","x3"],
                        "polynomialFunction": "x3^2+x1+x2"
                      }
                    ],
                  "target": "x4"
                }
              ]
          },
          {
            "timeSeriesData": [
                {
                  "index": [],
                  "matrix": [
                      [1,0,0,0],
                      [0,1,0,1],
                      [1,1,0,0]
                    ],
                  "name": "wildtype experiment 1"
                },
                {
                  "index": [],
                  "matrix": [
                      [1,1,0,0],
                      [0,0,0,1],
                      [1,0,0,0]
                    ],
                  "name": "wildtype experiment 2"
                },
                {
                  "index": [1],
                  "matrix": [
                      [0,0,0,0],
                      [0,0,0,1],
                      [0,1,0,0],
                      [0,0,0,1]
                    ],
                  "name": "knockout experiment 1"
                },
                {
                  "index": [3],
                  "matrix": [
                      [0,1,0,0],
                      [0,1,0,1],
                      [0,1,0,1],
                      [0,0,0,0]
                    ],
                  "name": "knockout experiment 2"
                },
                {
                  "index": [2],
                  "matrix": [
                      [1,0,0,0],
                      [0,0,0,1],
                      [1,0,0,1],
                      [0,0,0,0]
                    ],
                  "name": "knockout experiment 3"
                }
              ],
            "type": "timeSeries"
          }
        ]
    }
}
